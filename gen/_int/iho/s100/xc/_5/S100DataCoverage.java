//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.09.24 at 01:32:05 PM PDT 
//


package _int.iho.s100.xc._5;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * Definition required
 * 
 * <p>Java class for S100_DataCoverage complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="S100_DataCoverage">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="boundingPolygon" type="{http://www.iho.int/s100/xc/5.2}S100_BoundingPolygon_Type"/>
 *         &lt;element name="temporalExtent" type="{http://www.iho.int/s100/xc/5.2}S100_TemporalExtent" minOccurs="0"/>
 *         &lt;element name="optimumDisplayScale" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" minOccurs="0"/>
 *         &lt;element name="maximumDisplayScale" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" minOccurs="0"/>
 *         &lt;element name="minimumDisplayScale" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" minOccurs="0"/>
 *         &lt;element name="approximateGridResolution" type="{http://www.w3.org/2001/XMLSchema}float" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "S100_DataCoverage", propOrder = {
    "boundingPolygon",
    "temporalExtent",
    "optimumDisplayScale",
    "maximumDisplayScale",
    "minimumDisplayScale",
    "approximateGridResolution"
})
public class S100DataCoverage {

    @XmlElement(required = true)
    protected S100BoundingPolygonType boundingPolygon;
    protected S100TemporalExtent temporalExtent;
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger optimumDisplayScale;
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger maximumDisplayScale;
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger minimumDisplayScale;
    @XmlElement(type = Float.class)
    protected List<Float> approximateGridResolution;

    /**
     * Gets the value of the boundingPolygon property.
     * 
     * @return
     *     possible object is
     *     {@link S100BoundingPolygonType }
     *     
     */
    public S100BoundingPolygonType getBoundingPolygon() {
        return boundingPolygon;
    }

    /**
     * Sets the value of the boundingPolygon property.
     * 
     * @param value
     *     allowed object is
     *     {@link S100BoundingPolygonType }
     *     
     */
    public void setBoundingPolygon(S100BoundingPolygonType value) {
        this.boundingPolygon = value;
    }

    /**
     * Gets the value of the temporalExtent property.
     * 
     * @return
     *     possible object is
     *     {@link S100TemporalExtent }
     *     
     */
    public S100TemporalExtent getTemporalExtent() {
        return temporalExtent;
    }

    /**
     * Sets the value of the temporalExtent property.
     * 
     * @param value
     *     allowed object is
     *     {@link S100TemporalExtent }
     *     
     */
    public void setTemporalExtent(S100TemporalExtent value) {
        this.temporalExtent = value;
    }

    /**
     * Gets the value of the optimumDisplayScale property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getOptimumDisplayScale() {
        return optimumDisplayScale;
    }

    /**
     * Sets the value of the optimumDisplayScale property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setOptimumDisplayScale(BigInteger value) {
        this.optimumDisplayScale = value;
    }

    /**
     * Gets the value of the maximumDisplayScale property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaximumDisplayScale() {
        return maximumDisplayScale;
    }

    /**
     * Sets the value of the maximumDisplayScale property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaximumDisplayScale(BigInteger value) {
        this.maximumDisplayScale = value;
    }

    /**
     * Gets the value of the minimumDisplayScale property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMinimumDisplayScale() {
        return minimumDisplayScale;
    }

    /**
     * Sets the value of the minimumDisplayScale property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMinimumDisplayScale(BigInteger value) {
        this.minimumDisplayScale = value;
    }

    /**
     * Gets the value of the approximateGridResolution property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the approximateGridResolution property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getApproximateGridResolution().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Float }
     * 
     * 
     */
    public List<Float> getApproximateGridResolution() {
        if (approximateGridResolution == null) {
            approximateGridResolution = new ArrayList<Float>();
        }
        return this.approximateGridResolution;
    }

}
