//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.09.24 at 01:32:05 PM PDT 
//


package _int.iho.s100.xc._5;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for S100_ResourcePurpose.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="S100_ResourcePurpose">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="supportFile"/>
 *     &lt;enumeration value="ISOMetadata"/>
 *     &lt;enumeration value="languagePack"/>
 *     &lt;enumeration value="GMLSchema"/>
 *     &lt;enumeration value="other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "S100_ResourcePurpose")
@XmlEnum
public enum S100ResourcePurpose {


    /**
     * A support file
     * 
     */
    @XmlEnumValue("supportFile")
    SUPPORT_FILE("supportFile"),

    /**
     * Dataset metadata in ISO format
     * 
     */
    @XmlEnumValue("ISOMetadata")
    ISO_METADATA("ISOMetadata"),

    /**
     * A Language pack
     * 
     */
    @XmlEnumValue("languagePack")
    LANGUAGE_PACK("languagePack"),

    /**
     * GML Application Schema
     * 
     */
    @XmlEnumValue("GMLSchema")
    GML_SCHEMA("GMLSchema"),

    /**
     * A type of resource not otherwise described
     * 
     */
    @XmlEnumValue("other")
    OTHER("other");
    private final String value;

    S100ResourcePurpose(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static S100ResourcePurpose fromValue(String v) {
        for (S100ResourcePurpose c: S100ResourcePurpose.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
