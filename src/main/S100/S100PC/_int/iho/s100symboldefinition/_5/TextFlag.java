//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.7 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.09.25 at 04:23:30 PM PDT 
//


package _int.iho.s100symboldefinition._5;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TextFlag.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="TextFlag"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="UnderLine"/&gt;
 *     &lt;enumeration value="StrikeThrough"/&gt;
 *     &lt;enumeration value="UpperLine"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "TextFlag")
@XmlEnum
public enum TextFlag {


    /**
     * Text is depicted with a line under the text
     * 
     */
    @XmlEnumValue("UnderLine")
    UNDER_LINE("UnderLine"),

    /**
     * Text is depicted struck through, a line goes through the text
     * 
     */
    @XmlEnumValue("StrikeThrough")
    STRIKE_THROUGH("StrikeThrough"),

    /**
     * Text is depicted with a line above the text
     * 
     */
    @XmlEnumValue("UpperLine")
    UPPER_LINE("UpperLine");
    private final String value;

    TextFlag(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TextFlag fromValue(String v) {
        for (TextFlag c: TextFlag.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
