//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.7 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.09.25 at 04:22:14 PM PDT 
//


package _int.iho.s100cd._5;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for S100_CD_AttributeValueType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="S100_CD_AttributeValueType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="boolean"/&gt;
 *     &lt;enumeration value="enumeration"/&gt;
 *     &lt;enumeration value="integer"/&gt;
 *     &lt;enumeration value="real"/&gt;
 *     &lt;enumeration value="text"/&gt;
 *     &lt;enumeration value="date"/&gt;
 *     &lt;enumeration value="time"/&gt;
 *     &lt;enumeration value="dateTime"/&gt;
 *     &lt;enumeration value="URI"/&gt;
 *     &lt;enumeration value="URL"/&gt;
 *     &lt;enumeration value="URN"/&gt;
 *     &lt;enumeration value="S100_CodeList"/&gt;
 *     &lt;enumeration value="S100_TruncatedDate"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "S100_CD_AttributeValueType")
@XmlEnum
public enum S100CDAttributeValueType {


    /**
     * True or False
     * 
     */
    @XmlEnumValue("boolean")
    BOOLEAN("boolean"),

    /**
     * List of predetermined values that can be expanded and contracted
     * 
     */
    @XmlEnumValue("enumeration")
    ENUMERATION("enumeration"),

    /**
     * Numeric value with defined range, units and format
     * 
     */
    @XmlEnumValue("integer")
    INTEGER("integer"),

    /**
     * Floating point number
     * 
     */
    @XmlEnumValue("real")
    REAL("real"),

    /**
     * A sequence of characters
     * 
     */
    @XmlEnumValue("text")
    TEXT("text"),

    /**
     * Character encoding shall follow the format for date as specified by ISO 8601
     * 
     */
    @XmlEnumValue("date")
    DATE("date"),

    /**
     * Character encoding shall follow the format for time as specified by ISO 8601
     * 
     */
    @XmlEnumValue("time")
    TIME("time"),

    /**
     * Character encoding shall follow the format for date and time as specified by ISO 8601
     * 
     */
    @XmlEnumValue("dateTime")
    DATE_TIME("dateTime"),

    /**
     * Character encoding shall follow the format for URI as specified by RFC 3986
     * 
     */
    URI("URI"),

    /**
     * Character encoding shall follow the format for URL as specified by RFC 3986
     * 
     */
    URL("URL"),

    /**
     * Character encoding shall follow the format for URL as specified by RFC 3986
     * 
     */
    URN("URN"),

    /**
     * Open enumeration or identifier of entry in a vocabulary
     * 
     */
    @XmlEnumValue("S100_CodeList")
    S_100_CODE_LIST("S100_CodeList"),

    /**
     * Truncated format for date
     * 
     */
    @XmlEnumValue("S100_TruncatedDate")
    S_100_TRUNCATED_DATE("S100_TruncatedDate");
    private final String value;

    S100CDAttributeValueType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static S100CDAttributeValueType fromValue(String v) {
        for (S100CDAttributeValueType c: S100CDAttributeValueType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
