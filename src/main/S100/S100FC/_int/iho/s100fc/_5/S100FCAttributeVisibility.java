//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.7 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.09.25 at 04:22:14 PM PDT 
//


package _int.iho.s100fc._5;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for S100_FC_AttributeVisibility.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="S100_FC_AttributeVisibility"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="publicVisibility"/&gt;
 *     &lt;enumeration value="protectedVisibility"/&gt;
 *     &lt;enumeration value="privateVisibility"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "S100_FC_AttributeVisibility")
@XmlEnum
public enum S100FCAttributeVisibility {


    /**
     * Attribute visibility is for all uses.
     * 
     */
    @XmlEnumValue("publicVisibility")
    PUBLIC_VISIBILITY("publicVisibility"),

    /**
     * Attribute visibility is protected in some uses. The details to be defined in the product specification.
     * 
     */
    @XmlEnumValue("protectedVisibility")
    PROTECTED_VISIBILITY("protectedVisibility"),

    /**
     * Attribute visibility is private and should not be shown outside production environments. The details to be defined in the product specification.
     * 
     */
    @XmlEnumValue("privateVisibility")
    PRIVATE_VISIBILITY("privateVisibility");
    private final String value;

    S100FCAttributeVisibility(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static S100FCAttributeVisibility fromValue(String v) {
        for (S100FCAttributeVisibility c: S100FCAttributeVisibility.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
