//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.7 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.09.24 at 01:44:06 PM PDT 
//


package _int.iho.s100.xc._5;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for S100_Purpose.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="S100_Purpose"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="newDataset"/&gt;
 *     &lt;enumeration value="newEdition"/&gt;
 *     &lt;enumeration value="update"/&gt;
 *     &lt;enumeration value="reissue"/&gt;
 *     &lt;enumeration value="cancellation"/&gt;
 *     &lt;enumeration value="delta"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "S100_Purpose")
@XmlEnum
public enum S100Purpose {


    /**
     * Brand new dataset
     * 
     */
    @XmlEnumValue("newDataset")
    NEW_DATASET("newDataset"),

    /**
     * New edition of the dataset or Catalogue
     * 
     */
    @XmlEnumValue("newEdition")
    NEW_EDITION("newEdition"),

    /**
     * Dataset update
     * 
     */
    @XmlEnumValue("update")
    UPDATE("update"),

    /**
     * Dataset that has been re-issued
     * 
     */
    @XmlEnumValue("reissue")
    REISSUE("reissue"),

    /**
     * Dataset or Catalogue that has been cancelled
     * 
     */
    @XmlEnumValue("cancellation")
    CANCELLATION("cancellation"),

    /**
     * Dataset difference
     * 
     */
    @XmlEnumValue("delta")
    DELTA("delta");
    private final String value;

    S100Purpose(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static S100Purpose fromValue(String v) {
        for (S100Purpose c: S100Purpose.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
